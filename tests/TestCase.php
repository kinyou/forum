<?php

namespace Tests;

use App\Exceptions\Handler;
use Exception;
use Illuminate\Contracts\Container\Container;
use Illuminate\Contracts\Debug\ExceptionHandler;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    protected $oldExceptionHandler;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->disableExceptionHanding();
    }

    /**
     * 禁用抛出异常
     */
    protected function disableExceptionHanding()
    {
        $this->oldExceptionHandler = $this->app->make(ExceptionHandler::class);

        $this->app->instance(ExceptionHandler::class,new class extends Handler {
           public function __construct(){}
           public function report(Exception $exception){}
           public function render($request, Exception $exception){
               throw $exception;
           }
        });
    }


    /**
     * 抛出异常
     * @return $this|BaseTestCase
     */
    protected function withExceptionHandling()
    {
        $this->app->instance(ExceptionHandler::class,$this->oldExceptionHandler);

        return $this;
    }

    /**
     * 获取一个已登录的用户
     * @param null $user
     * @return $this
     */
    protected function signIn($user = null)
    {
        $user = $user ?: create('App\User');

        $this->actingAs($user);

        return $this;
    }
}
