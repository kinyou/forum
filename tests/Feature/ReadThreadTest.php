<?php

namespace Tests\Feature;

use App\Reply;
use App\Thread;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ReadThreadTest extends TestCase
{
    use DatabaseMigrations;

    protected $thread;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->thread = factory(Thread::class)->create();
    }

    /**
     * @test
     */
    public function a_user_can_view_all_threads()
    {
        $this->get('/threads')
            ->assertStatus(200)
            ->assertSeeText($this->thread->title);

    }


    /**
     * @test
     */
    public function a_user_can_read_a_single_thread()
    {

        $this->get($this->thread->path())
            ->assertStatus(200)
            ->assertSeeText($this->thread->title);
    }


    /**
     * @test
     */
    public function a_user_can_read_replies_that_are_associated_with_a_thread()
    {
        //1.如果存在Thread
        $reply = factory(Reply::class)->create(['thread_id'=>$this->thread->id]);
        //2.并且该Thread拥有回复
        //3.那么当我们看到Thread时也能看到回复

        $this->get($this->thread->path())
            ->assertStatus(200)
            ->assertSeeText($reply->body);
    }
}
